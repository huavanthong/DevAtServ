name: Device Automation Services

on:
  push:
    tags:
      - "rel/das/*.*.*.*"
      - "dev/das/*.*.*.*"
  pull_request:
    types:
      - closed
      - opened
      - synchronize
    branches:
    - develop

  workflow_dispatch:

jobs:
  devatserv-gui:
    name: DevAtServ's GUI
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./python-microservice-base/MicroserviceBase/MicroserviceManagerGUI
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clone python-microservice-base
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          depth: 1
          branch: 'htv3hc/feat/release-microservice-base-gui'
          owner: 'test-fullautomation'
          repository: 'python-microservice-base'

      - name: Run npm install
        run: npm install

      - name: Run npm dist
        run: |
          npm run dist
    
      - name: Upload Ubuntu artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: das-gui-artifact-deb
          path: ./python-microservice-base/MicroserviceBase/MicroserviceManagerGUI/dist/*.deb

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: das-gui-artifact-exe
          path: ./python-microservice-base/MicroserviceBase/MicroserviceManagerGUI/dist/*.exe

  build-devatserv:
    name: DevAtServ tool
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: [ devatserv-gui ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download DevAtServ's GUI on Unbuntu
        if: matrix.os == 'ubuntu-latest'
        uses: actions/download-artifact@v4
        with:
          name: das-gui-artifact-deb

      - name: Download DevAtServ's GUI on Windows
        if: matrix.os == 'windows-latest'
        uses: actions/download-artifact@v4
        with:
          name: das-gui-artifact-exe

      - name: Set up Docker Desktop with WSL 2
        run: |
          wsl --install
          wsl --set-default-version 2
          # Install a Linux distribution, e.g., Ubuntu
          wsl --install -d Ubuntu
          # Start Docker Desktop and ensure it uses WSL 2

      - name: Starting all services
        shell: bash
        run: |
          chmod +x ./install.sh
          ./install.sh

      - name: Build DevAtServ
        shell: bash
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Upload Debian package
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: devatserv-linux-package
          path: output_Linux/*.deb

      - name: Upload Exe package
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: devatserv-windows-package
          path: output_Windows/*.exe